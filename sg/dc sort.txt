Sub SortDocumentCollection(docCollection As NotesDocumentCollection, sortFieldName As String, ascending As Boolean)
    Dim session As New NotesSession
    Dim db As NotesDatabase 
    Dim tempDoc As NotesDocument
    Dim tempArray() As Variant
    Dim i As Integer
    
    ' Get the database
    Set db = session.CurrentDatabase
    
    ' Initialize the temporary array
    Redim tempArray(docCollection.Count - 1)
    
    ' Populate the temporary array with values to sort
    i = 0
    Set tempDoc = docCollection.GetFirstDocument
    Do While Not tempDoc Is Nothing
        tempArray(i) = tempDoc.GetItemValue(sortFieldName)(0)
        i = i + 1
        Set tempDoc = docCollection.GetNextDocument(tempDoc)
    Loop
    
    ' Sort the temporary array
    Call bubbleSort(tempArray, ascending)
    
    ' Clear the original collection
    Call docCollection.RemoveAll(True)
    
    ' Repopulate the collection with sorted documents
    For i = 0 To Ubound(tempArray)
        Set tempDoc = db.GetDocumentByUNID(tempArray(i))
        Call docCollection.AddDocument(tempDoc)
    Next
End Sub

Sub bubbleSort(arr() As Variant, ascending As Boolean)
    Dim i As Integer
    Dim j As Integer
    Dim temp As Variant
    Dim swapped As Boolean
    
    For i = 0 To Ubound(arr) - 1
        swapped = False
        For j = 0 To Ubound(arr) - i - 1
            If (ascending And arr(j) > arr(j + 1)) Or (Not ascending And arr(j) < arr(j + 1)) Then
                temp = arr(j)
                arr(j) = arr(j + 1)
                arr(j + 1) = temp
                swapped = True
            End If
        Next
        ' If no two elements were swapped in the inner loop, then the array is sorted
        If Not swapped Then Exit For
    Next
End Sub


Dim session As New NotesSession
Dim db As NotesDatabase
Dim docCollection As NotesDocumentCollection

Set db = session.CurrentDatabase
Set docCollection = db.AllDocuments ' Or any other document collection you have

SortDocumentCollection docCollection, "FieldName", True ' Sort in ascending order by FieldName



Sub Click(Source As Button)
	
	Dim session As New NotesSession
	Dim db As NotesDatabase
	Dim view As NotesView
	Dim entry As NotesViewEntry
	Dim vc As NotesViewEntryCollection
	Set db = session.CurrentDatabase
	Set view = db.GetView("PRMPaymentSchemesEmbView")
	view.AutoUpdate = False
	
	BatchNo   =  (Inputbox$("Start Batch No to extract  ? "))
	
	Set vc = view.GetAllEntriesByKey(BatchNo)
	'Set entry = vc.GetNthEntry(3)
	'Msgbox  vc.Count
	For i=1 To  vc.Count
		Set entry = vc.GetNthEntry(i)
		Set doc = entry.Document
		Print doc.Payment_Desc(0)
	Next
	
	
	Dim xlApp As Variant
	Dim oWorkbook As Variant   
	Set xlApp = CreateObject("Excel.Application") 
	xlApp.Visible = True 'set to visible, this can be moved to the end if you wish
	Set oWorkbook = xlApp.Workbooks 'handle to Workbook	oworkbook.Add 
	oworkbook.Add 
	
	row = 3
	col = 1	
	xlApp.cells (row,col) =  "Batch "
	col = col + 1
	xlApp.cells (row,col) =  "Payment_Desc"
	
	
	col = col + 1
	xlApp.cells (row,col) =  "DueDate"
	col = col + 1
	xlApp.cells (row,col) =  "Plot_Phase" ' 4 
	col = col + 1
	xlApp.cells (row,col) =  "Payment_Amount" ' 4            
	'//////////////////////
	
	row = 4
	For i=1 To  vc.Count
		Set entry = vc.GetNthEntry(i)
		Set prop_doc = entry.Document
		Print prop_doc.Payment_Desc(0)
		
		col = 1	
		xlApp.cells (row,col) =  i   'prop_doc.Batch(0)
		
		col = col + 1
		xlApp.cells (row,col) =  prop_doc.Payment_Desc(0)   ' 4 add		
		col = col + 1
		xlApp.cells (row,col) =  Format(Cstr(prop_doc.Due_Date(0)), "dd-mmm-yyyy")   ' 5 Mobile	
		col = col + 1
		xlApp.cells (row,col) =  prop_doc.Plot_Phase(0)   ' 4 add		
		col = col + 1
		xlApp.cells (row,col) =  prop_doc.Payment_Amount(0)   ' 5 Mobile	
		
NextDoc :	
		row = row +1
		'Set prop_doc = docCollection.GetNextDocument(prop_doc)	
		
	Next
	
mdone:	
	Set  oWorkbook = Nothing    
	Set xlApp =Nothing 
	Print "done"
	Exit Sub
	
End Sub